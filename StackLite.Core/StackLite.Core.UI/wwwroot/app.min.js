angular.module("stackLite",["ui.router","ngResource","ngMaterial"]).config(function(e,t){t.otherwise("/main"),e.state("questions-list",{url:"/main",controller:"questionsCtrl",templateUrl:"questions.html"}).state("ask-question",{url:"/question/new",controller:"newQuestionCtrl",templateUrl:"askQuestion.html"}).state("question-details",{url:"/question/:id",controller:"answersCtrl",templateUrl:"answers.html",resolve:{answerService:function(e,t){return e(t.id)},question:function(e,t){return e.get(t.id)}}})}),angular.module("stackLite").controller("answersCtrl",function(e,t,n){e.question=t,e.answers=n.getAll(),e.addAnswer=function(t){n.suggest(t).then(function(){e.newAnswer="",e.answers=n.getAll()})},e.upvote=function(e){n.upvote(e.Id).then(function(t){e.Votes=t.VoteScore})},e.downvote=function(e){n.downvote(e.Id).then(function(t){e.Votes=t.VoteScore})}}),angular.module("stackLite").controller("newQuestionCtrl",function(e,t,n){e.addQuestion=function(e){n.ask({Content:e}).then(function(){t.go("questions-list")})}}),angular.module("stackLite").service("questionAnswerService",function(e){return function(t){var n=e("question/"+t+"/answers/:answerId/:suffix",{answerId:"@answerId",suffix:"@suffix"},{update:{method:"PUT"},upvote:{method:"PUT",params:{suffix:"upvote"}},downvote:{method:"PUT",params:{suffix:"downvote"}}});return{getAll:n.query,upvote:function(e){return n.upvote({answerId:e}).$promise},downvote:function(e){return n.downvote({answerId:e}).$promise},suggest:function(e){return n.save({answerContent:e,QuestionId:t}).$promise},amend:function(e){return n.put({answerId:e.id},{answerContent:e}).$promise}}}}),angular.module("stackLite").controller("questionsCtrl",function(e,t){e.questions=t.getAll()}),angular.module("stackLite").service("questionsService",function(e){var t=e("questions/:id",{id:"@id"},{update:{method:"PUT"}});return{get:function(e){return t.get({id:e}).$promise},getAll:t.query,ask:function(e){return t.save(e).$promise},amend:function(e){return t.put({id:e.id},e).$promise}}});